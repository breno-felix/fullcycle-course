version: '3'
services:
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - nodejs
    networks:
      - app-network

  nodejs:
    build: 
      context: .
    container_name: app
    # ports:
    #   - 3000:3000
    entrypoint: dockerize -wait tcp://db:3306 -timeout 20s sh -c "npm install && npm start"
    volumes:
      - ./src:/app
    tty: true
    environment:
      - MYSQL_HOST=mysql
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DB=${MYSQL_DB}
    depends_on:
      - mysql  
    networks:
      - app-network
    # command: ["tail", "-f", "/dev/null"]

  mysql:
    image: mysql:latest
    container_name: db
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DB}
    volumes:
      - mysql-data:/var/lib/mysql
      - ./create_table_people.sql:/docker-entrypoint-initdb.d/create_table_people.sql
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql-data: